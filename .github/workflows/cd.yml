name: Deployment

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.JS
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Build application
        run: |
          npm ci
          npm run build
          npm run build:package

      - name: Test with jest
        run: |
          npm run test:coverage

      - name: Archive package
        uses: actions/upload-artifact@v2
        with:
          name: carto-janitor
          path: package

  deploy:
    needs: test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: deployment
    steps:
      - uses: actions/checkout@v2

      - uses: hashicorp/setup-terraform@v1

      - uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          export_default_credentials: true

      - name: Download Client Artifact
        uses: actions/download-artifact@v2
        with:
          name: carto-janitor
          path: package

      - name: Initialise terraform
        run: terraform init

      - name: Apply terraform
        run: |
          terraform apply \
            -var="discord_token=$DISCORD_BOT_TOKEN" \
            -auto-approve
        env:
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
